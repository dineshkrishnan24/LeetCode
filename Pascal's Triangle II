Link: https://leetcode.com/problems/pascals-triangle-ii/

Question:
Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:

Input: rowIndex = 3
Output: [1,3,3,1]

Example 2:
Input: rowIndex = 0
Output: [1]

Example 3:
Input: rowIndex = 1
Output: [1,1]


//DP
class Solution {
    public List<Integer> getRow(int rowIndex) {
        if(rowIndex == 0) {
            return Arrays.asList(1);
        }
        if(rowIndex == 1) {
            return Arrays.asList(1,1);
        }
        List<Integer> tempList = Arrays.asList(1,1);
        List<Integer> finalList = new ArrayList<>();
        for(int i=2;i<=rowIndex;i++) {
            finalList = new ArrayList<>();
            finalList.add(1);
            for(int j=1;j<tempList.size();j++) {
                finalList.add(tempList.get(j-1)+tempList.get(j));
            }
            finalList.add(1);
            tempList = finalList;
        }
        return finalList;
    }
}