Link: https://leetcode.com/problems/pascals-triangle/

Question:

Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]

// DP
class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> finalList = new ArrayList<>();
        finalList.add(Arrays.asList(1));
        if(numRows == 1)   
            return finalList;
        finalList.add(Arrays.asList(1,1));
        if(numRows == 2)   
            return finalList;
        for(int i=2;i<numRows;i++){
            List<Integer> currentRowList = new ArrayList<>();
            currentRowList.add(1);
            for(int j=0;j<finalList.get(i-1).size()-1;j++) {
                currentRowList.add(finalList.get(i-1).get(j)+finalList.get(i-1).get(j+1));
            }
            currentRowList.add(1);
            finalList.add(currentRowList);
        }
        return finalList;
    }
}