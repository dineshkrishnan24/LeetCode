Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

 

Example 1:


Input: root = [1,2,3,null,5,null,4]
Output: [1,3,4]
Example 2:

Input: root = [1,null,3]
Output: [1,3]
Example 3:

Input: root = []
Output: []



Solution: 

class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        if(root == null)
            return new ArrayList<Integer>();
        Map<Integer, Integer> map = new HashMap<>();
        traverse(root, map, 1);
        return new ArrayList<>(map.values());
    }

    public void traverse(TreeNode root, Map<Integer, Integer> map, int level) {
        if(root == null)
            return;
        map.put(level, map.getOrDefault(level, root.val));
        traverse(root.right, map, level+1);
        traverse(root.left, map, level+1);
    }
}