Implement pow(x, n), which calculates x raised to the power n (i.e., xn).

 

Example 1:

Input: x = 2.00000, n = 10
Output: 1024.00000
Example 2:

Input: x = 2.10000, n = 3
Output: 9.26100
Example 3:

Input: x = 2.00000, n = -2
Output: 0.25000
Explanation: 2-2 = 1/22 = 1/4 = 0.25


Solution: Divide And Conqure

Time Complexity: O(logN)
Space Complexity: O(1)


class Solution {
    public double myPow(double x, int n) {
        boolean isNegative = false;
        if(n < 0)
            isNegative = true;
        n = Math.abs(n);
        double value = getValue(x, n);
        return isNegative ? 1/value : value;
    }

    public double getValue(double x, int n) {
        if(n==0) {
            return 1;
        }
        double v = getValue(x, (int)n/2);
        if(n%2 == 0) {
            return  v * v;
        }
        return x * v * v;
    }
}