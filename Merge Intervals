Link: https://leetcode.com/problems/merge-intervals/submissions/

Question:
Example 1:
Input: intervals = [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].

Example 2:
Input: intervals = [[1,4],[4,5]]
Output: [[1,5]]
Explanation: Intervals [1,4] and [4,5] are considered overlapping.


class Solution {
    public int[][] merge(int[][] intervals) {
        Arrays.sort(intervals, Comparator.comparing(row->row[0]));
        List<int[]> mergeList = new ArrayList<>();
        int[] arr = intervals[0];
        for(int i=1;i<intervals.length;i++) {
            int[] cur = intervals[i];
            if(cur[0]<=arr[1]) {
                int[] merged = {arr[0],Math.max(arr[1],cur[1])};
                arr = merged;
            } else {
                mergeList.add(arr);
                arr=cur;
            }
        }
        mergeList.add(arr);
        int[][] finalArr = new int[mergeList.size()][2];
        return mergeList.toArray(finalArr);
    }
}