Link: https://leetcode.com/problems/merge-intervals/submissions/

Question:
Example 1:
Input: intervals = [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].

Example 2:
Input: intervals = [[1,4],[4,5]]
Output: [[1,5]]
Explanation: Intervals [1,4] and [4,5] are considered overlapping.


class Solution {
    public int[][] merge(int[][] intervals) {
        Arrays.sort(intervals, Comparator.comparing(row->row[0]));
        List<int[]> mergeList = new ArrayList<>();
        int[] newInterval = intervals[0];
        mergeList.add(newInterval);
        for(int[] interval : intervals) {
            if(newInterval[1]>=interval[0]) {
                newInterval[1] = Math.max(newInterval[1],interval[1]);
            } else {
                newInterval = interval;
                mergeList.add(interval);
            }
        }
        return mergeList.toArray(new int[mergeList.size()][2]);
    }
}