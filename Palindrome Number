Given an integer x, return true if x is a 
palindrome
, and false otherwise.

 

Example 1:

Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 

Constraints:

-231 <= x <= 231 - 1
 

Follow up: Could you solve it without converting the integer to a string?



Solution: 

Time Complexity: O(N)
Space Complexity: O(N)


class Solution {
    public boolean isPalindrome(int x) {
        if(x<0) {
            return false;
        }
        ArrayList<Integer> list = new ArrayList<>();
        while(x>0) {
            list.add(x%10);
            x = x/10;
        }
        int n = list.size();
        int l =0, r = n-1;
        for(int i=0;i<n/2;i++) {
            if(list.get(l) != list.get(r)) {
                return false;
            }
            l++;
            r--;
        }
        return true;
    }
}